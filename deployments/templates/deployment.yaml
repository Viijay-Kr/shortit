apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: {{ .Values.mongodb.image.registry }}/{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mongodb-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-service-generate
spec:
  selector:
    matchLabels:
      app: service-generate
  replicas: {{ .Values.serviceGenerate.replicas }}
  template:
    metadata:
      labels:
        app: service-generate
    spec:
      imagePullSecrets:
      - name: dockerhub-secret
      initContainers:
      - name: wait-for-mongodb
        image: busybox
        command: ['sh', '-c', 'until nc -z shortitsh-mongodb.shortit 27017; do echo waiting for mongodb; sleep 2; done;']
      - name: wait-for-redis
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Values.env.REDIS_HOST }} {{ .Values.env.REDIS_PORT }}; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: service-generate
        image: {{ .Values.serviceGenerate.image.registry }}/{{ .Values.serviceGenerate.image.repository }}:{{ .Values.serviceGenerate.image.tag }}
        imagePullPolicy: {{ .Values.serviceGenerate.image.pullPolicy }}
        env:
        - name: GO_ENV
          value: {{ .Values.env.GO_ENV | quote }}
        - name: DATABASE_URL
          value: {{ .Values.env.DATABASE_URL | quote }}
        - name: REDIS_HOST
          value: {{ .Values.env.REDIS_HOST | quote }}
        - name: REDIS_PORT
          value: {{ .Values.env.REDIS_PORT | quote }}
        - name: REDIS_PASSWORD
          value: {{ .Values.env.REDIS_PASSWORD | quote }}
        - name: SHORTIT_REDIRECT_HOST
          value: {{ .Values.env.SHORTIT_REDIRECT_HOST | quote }}
        - name: SERVICE_GENERATE_PORT
          value: {{ .Values.serviceGenerate.port | quote }}  
        - name: SERVICE_REDIRECT_PORT
          value: {{ .Values.serviceRedirect.port | quote }}    
        ports:
        - containerPort: {{ .Values.serviceGenerate.port }}
       
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-service-redirect
spec:
  selector:
    matchLabels:
      app: service-redirect
  replicas: {{ .Values.serviceRedirect.replicas }}
  template:
    metadata:
      labels:
        app: service-redirect
    spec:
      imagePullSecrets:
      - name: dockerhub-secret
      initContainers:
      - name: wait-for-mongodb
        image: busybox
        command: ['sh', '-c', 'until nc -z shortitsh-mongodb.shortit 27017; do echo waiting for mongodb; sleep 2; done;']
      - name: wait-for-redis
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Values.env.REDIS_HOST }} {{ .Values.env.REDIS_PORT }}; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: service-redirect
        image: {{ .Values.serviceRedirect.image.registry }}/{{ .Values.serviceRedirect.image.repository }}:{{ .Values.serviceRedirect.image.tag }}
        imagePullPolicy: {{ .Values.serviceRedirect.image.pullPolicy }}
        env:
        - name: GO_ENV
          value: {{ .Values.env.GO_ENV | quote }}
        - name: DATABASE_URL
          value: {{ .Values.env.DATABASE_URL | quote }}
        - name: REDIS_HOST
          value: {{ .Values.env.REDIS_HOST | quote }}
        - name: REDIS_PORT
          value: {{ .Values.env.REDIS_PORT | quote }}
        - name: REDIS_PASSWORD
          value: {{ .Values.env.REDIS_PASSWORD | quote }}
        - name: SHORTIT_REDIRECT_HOST
          value: {{ .Values.env.SHORTIT_REDIRECT_HOST | quote }}
        - name: SERVICE_REDIRECT_PORT
          value: {{ .Values.serviceRedirect.port | quote }}  
        ports:
        - containerPort: {{ .Values.serviceRedirect.port }}
        
